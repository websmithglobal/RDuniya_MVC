@{
    /**/

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link rel="stylesheet" type="text/css" href="~/Content/select2/select2.css" />
}
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">
                    R-Offer Mapping to Customer
                    <span class="pull-right">
                        <button class="btn btn-inverse" onclick="AddMapped();"><i class="fa fa-plus-square-o"></i>&nbsp;Add New Mapping</button>
                        <button class="btn btn-inverse" type="button" onclick="RefreshMaster();"><i class="fa fa-refresh"></i></button>
                    </span>
                </h3>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <table id="tblDisplay" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>ENTRY DATE</th>
                                    <th>USERNAME</th>
                                    <th>TITLE</th>
                                    <th>PERDAY CREDIT(L)</th>
                                    <th>EXPIRY DATE</th>
                                    <th>PACK STATUS</th>
                                    <th>STATUS</th>
                                    <th>EDIT</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="myModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="custom-width-modalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="frmMapping">
                <input type="hidden" id="roffermapid" name="roffermapid" />
                <input type="hidden" id="EntryMode" name="EntryMode" />
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title" id="custom-width-modalLabel">Add New Mapping</h4>
                </div>
                <div class="modal-body">
                    <div id="dvmessage"></div>
                    <div id="dvindexmessage"></div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="field-1" class="control-label">Select Country :</label>
                                <select class="select2" name="userid" id="userid">
                                    <option value="00000000-0000-0000-0000-000000000000" selected>-Select B2c Users-</option>
                                    @foreach (Web.Framework.Entity.UserProfile el in ViewBag.ApiUsers)
                                    {
                                        <option value="@el.up_userid">@el.up_username >> @el.up_mobile</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="field-1" class="control-label">Select RofferAPI :</label>
                                <select class="select2" name="rofferid" id="rofferid">
                                    <option value="00000000-0000-0000-0000-000000000000" selected>-Select API-</option>
                                    @foreach (Web.Framework.Entity.RofferAPI el in ViewBag.RofferData)
                                    {
                                        <option value="@el.rofferid">@el.title</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="field-1" class="control-label">PerDay Credit Limit :</label>
                                <input type="text" class="form-control" id="creditlimit" name="creditlimit" placeholder="PerDay Credit Limit">
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="field-1" class="control-label">ExpiryDate :</label>
                                <input type="text" class="form-control" id="expirydate" name="expirydate" placeholder="Expiry Date">
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" onclick="SaveEntry();" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Content/select2/select2.min.js"></script>
    <script type="text/javascript">
        var tablelist;
        $(document).ready(function () {
            waitingDialog.show('Please Wait..');
            tablelist = $('#tblDisplay').DataTable({
                "processing": true,
                "serverSide": true,
                "responsive": true,
                "sPaginationType": "full_numbers",
                "info": true,
                "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]],
                "ajax": {
                    "url": "@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))RofferMapped/GetAll",
                    "type": "POST", "datatype": "json"
                },
                "aoColumns": [
                {
                        data: "roffermapid", "bSearchable": true, "bSortable": true, "mRender": function (data, type, oObj) {
                        return '<label class="form-label">' + formatDate(oObj.CreatedDateTime.substring(6, oObj.CreatedDateTime.length - 2)) + '</label>';
                    }
                },
                    { data: "up_username", "bSearchable": true, "orderable": true, "orderable": true },
                    { data: "title", "bSearchable": true, "orderable": true, "orderable": true },
                    { data: "creditlimit", "bSearchable": true, "orderable": true, "orderable": true },
                    {
                        data: "roffermapid", "bSearchable": true, "bSortable": true, "mRender": function (data, type, oObj) {
                            return '<label class="form-label">' + formatDateOnly(oObj.expirydate.substring(6, oObj.expirydate.length - 2)) + '</label>';
                        }
                    },
                    {
                       data: "rstatus", "bSearcable": true, "bSortable": true, "mRender": function (data, type, oObj) {
                            if (oObj.rstatus == 1) {
                                return '<span class="label label-success">Actived</span>'
                            } else { return '<span class="label label-danger">Suspend</span>' }
                       }
                    },
                    {
                        data: "Status", "bSearcable": true, "bSortable": true, "mRender": function (data, type, oObj) {
                            if (oObj.Status == 1) {
                                return "<button type='button' class='btn btn-primary btn-xs' onclick='StatusUpdate(&quot;" + oObj.roffermapid + "&quot;)'>Active</button>"
                            } else { return "<button type='button' class='btn btn-danger btn-xs' onclick='StatusUpdate(&quot;" + oObj.roffermapid + "&quot;)'>De-Active</button>" }
                        }
                    },
                    {
                        data: "roffermapid", "bSearchable": true, "bSortable": false, "mRender": function (data, type, oObj) {
                            return ' <button type="button" class="btn btn-info btn-xs" onclick="EditEntry(/' + oObj.roffermapid + '/)">Edit</button>';
                        },
                    },
                ],
            });
            waitingDialog.hide();
            tablelist.init();
            $("#expirydate").datepicker({
                format: 'mm/dd/yyyy',
                todayHighlight: 'TRUE',
                autoclose: true
            });
            $('.select2').select2({
                width: '100%'
            });
        });
        function RefreshMaster() { tablelist.draw(); }
        function AddMapped() {
            $("#dvindexmessage").empty();
            $("#dvmessage").empty();
            $('#myModal').modal('show');
        }
        function formatDateOnly(ms) {
            var date = new Date(parseInt(ms));
            return (date.getDate().toString().length == 1 ? "0" : "") + (date.getDate()) + "/" + (date.getMonth().toString().length == 1 ? "0" : "") + (date.getMonth() + 1) + "/" + date.getFullYear();
        }
        function SaveEntry() {
            var frmModel = $("#frmMapping").serialize();
            $.post("../RofferMapped/SaveEntry", frmModel, function (resdata) {
                if (resdata.EntryStatus == true) {
                    $("#dvmessage").empty();
                    tablelist.draw();
                    $("#creditlimit").val('');
                    $("#expirydate").val('');
                    $("#userid").val('00000000-0000-0000-0000-000000000000');
                    $('#userid').trigger('change');
                    $("#rofferid").val('00000000-0000-0000-0000-000000000000');
                    $('#rofferid').trigger('change');
                    $("#dvindexmessage").empty().append(resdata.MessageHtml);
                    tablelist.fnDraw();
                } else {
                    $("#dvindexmessage").empty();
                    $("#dvmessage").empty().append(resdata.MessageHtml);
                }
            });
        }
        function StatusUpdate(updateid) {
            swal({
                title: "Status",
                text: "Are you sure to change Status...?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Change Status",
                closeOnConfirm: true
            },
                function () {
                    $.getJSON("../RofferMapped/UpdateStatus/" + updateid, function (json) {
                        if (json.EntryStatus == true) {
                            tablelist.draw();
                        } else {
                            swal("Error", json.MessageHtml, "error")
                        }
                    });
                });
        }
        function EditEntry(editid) {
            $("#roffermapid").val(editid);
            $("#EntryMode").val('Edit');
            $("#dvmessage").empty();
            $.getJSON("../RofferMapped/EditRecord/" + editid, function (json) {
                $("#tblUserList").dataTable().fnDraw();
                $("#userid").val(json.Model.userid);
                $('#userid').trigger('change');
                $("#rofferid").val(json.Model.rofferid);
                $('#rofferid').trigger('change');
                $("#creditlimit").val(json.Model.creditlimit);
                $("#expirydate").val(formatDateOnly(json.Model.expirydate.substring(6, json.Model.expirydate.length - 2)));
            });
            $('#myModal').modal('show');
        }
    </script>
}