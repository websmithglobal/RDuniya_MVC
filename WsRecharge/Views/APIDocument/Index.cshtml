@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link href="~/Content/toggles/toggles.css" rel="stylesheet" />
}
<div class="col-md-12">
    <div class="panel panel-default">
        <div class="panel-heading"><h3 class="panel-title">SECURITY STATUS [ IP ADDRESS /  WITHOUT IP ADDRESS ]</h3></div>
        <div class="panel-body">
            <form class="form-horizontal" id="IpLock" role="form">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="col-sm-6 control-label">IP ADDRESS</label>
                            <div class="col-sm-6 control-label">
                                <div id="IsEnabled" class="toggle toggle-success"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="col-md-12">
    <div class="panel panel-default">
        <div class="panel-heading"><h3 class="panel-title">ADD IP ADDRESS</h3></div>
        <form id="frmIpAddress" name="frmIpAddress" role="form">
            <div class="panel-body">
                <div id="dvmessage"></div>
                <div id="dvindexmessage"></div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="exampleInputEmail1">&nbsp;</label>
                            <input class="form-control" id="address" name="address" placeholder="Enter Ip Address" type="text">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="exampleInputEmail1">&nbsp;</label><br />
                            <button type="button" onclick="SaveEntry();" class="btn btn-success">Add</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <table id="tblDisplay" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>Entry Date</th>
                                    <th>Your Ip Address</th>
                                    <th>Status</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts{
    <script type="text/javascript" src="~/Content/toggles/toggles.min.js"></script>
    <script type="text/javascript">
        var tablelist;
        function formatDate(ms) {
            var date = new Date(parseInt(ms));
            var hour = date.getHours();
            var mins = date.getMinutes() + '';
            var time = "AM";
            // find time
            if (hour >= 12) {
                time = "PM";
            }
            // fix hours format
            if (hour > 12) {
                hour -= 12;
            }
            else if (hour == 0) {
                hour = 12;
            }
            // fix minutes format
            if (mins.length == 1) {
                mins = "0" + mins;
            }
            // return formatted date time string
            return (date.getDate().toString().length == 1 ? "0" : "") + (date.getDate()) + "/" + (date.getMonth().toString().length == 1 ? "0" : "") + (date.getMonth() + 1) + "/" + date.getFullYear() + " " + hour + ":" + mins + " " + time;
        }
        $(document).ready(function () {
            GetIsEnabled();
            waitingDialog.show('Please Wait..');
            tablelist = $('#tblDisplay').DataTable({
                "processing": true,
                "serverSide": true,
                "responsive": true,
                "sPaginationType": "full_numbers",
                "info": true,
                "lengthMenu": [[10, 50, 100, -1], [10, 50, 100, 200]],
                "ajax": {
                    "url": "@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))APIDocument/GetAll",
                    "type": "POST", "datatype": "json"
                },
                "aoColumns": [
                {
                    data: "ipid", "bSearchable": true, "bSortable": true, "mRender": function (data, type, oObj) {
                        return '<label class="form-label">' + formatDate(oObj.SystemDateTime.substring(6, oObj.SystemDateTime.length - 2)) + '</label>';
                    }
                },
                { data: "address", "bSearchable": true, "orderable": true, "orderable": true },
                {
                    data: "Status", "bSearcable": true, "bSortable": true, "mRender": function (data, type, oObj) {
                        if (oObj.Status == 1) {
                            return "<button type='button' class='btn btn-success btn-xs' onclick='StatusUpdate(&quot;" + oObj.ipid + "&quot;)'>Active</button>"
                        } else { return "<button type='button' class='btn btn-danger btn-xs' onclick='StatusUpdate(&quot;" + oObj.ipid + "&quot;)'>De-Active</button>" }
                    }
                },
                    {
                        data: "ipid", "bSearchable": true, "bSortable": false, "mRender": function (data, type, oObj) {
                            return ' <button type="button" class="btn btn-danger btn-xs" onclick="DeleteEntry(/' + oObj.ipid + '/)">Delete</button>';
                        },
                    },
                ],
            });
            waitingDialog.hide();
            tablelist.init();
        });

        function SaveEntry() {
            $("#dvindexmessage").empty();
            $("#dvmessage").empty();
            var frmModel = $("#frmIpAddress").serialize();
            $.post("../APIDocument/SaveEntry", frmModel, function (resdata) {
                if (resdata.EntryStatus == true) {
                    $("#dvmessage").empty();
                    tablelist.draw();
                    $("#dvindexmessage").empty().append(resdata.MessageHtml);
                    $("#address").val("");
                    tablelist.fnDraw();
                } else {
                    $("#dvindexmessage").empty();
                    $("#dvmessage").empty().append(resdata.MessageHtml);
                }
            });
        }
        function StatusUpdate(updateid) {
            swal({
                title: "Status",
                text: "Are you sure to change Status...?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Change Status",
                closeOnConfirm: true
            },
            function () {
                $.getJSON("../APIDocument/UpdateStatus/" + updateid, function (json) {
                    if (json.EntryStatus == true) {
                        tablelist.draw();
                    } else {
                        swal("Error", json.MessageHtml, "error")
                    }
                });
            });
        }
        function DeleteEntry(editid) {
            swal({
                title: "Are you sure?",
                text: "Your will not be able to recover this record!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
                function () {
                    $.getJSON("../APIDocument/DeleteEntry/" + editid, function (json) {
                        if (json.EntryStatus == true) {
                            tablelist.draw();
                        } else {
                            swal("Error", json.Messages, "error")
                        }
                    });

                });
        }
        $('#IsEnabled').toggles({
            drag: true,
            click: true,
            text: {
                on: 'ON',
                off: 'OFF'
            }, on: true, animate: 250, easing: 'swing', checkbox: null, clicker: null, width: 50, height: 20, type: 'compact'
        });
        $('#IsEnabled').on('toggle', function (e, active) {
            $.getJSON("../APIDocument/IsEnabledActivity/" + active, function (json) { });
        });
        function GetIsEnabled() {
            $.getJSON("../APIDocument/GetIsEnabled/", function (json) {
                $('#IsEnabled').toggles({
                    drag: true,
                    click: true,
                    text: {
                        on: 'ON',
                        off: 'OFF'
                    }, on: (json == null) ? true : json.Isenabled, animate: 250, easing: 'swing', checkbox: null, clicker: null, width: 50, height: 20, type: 'compact'
                });
            });
        }
    </script>

}


